{"version":3,"sources":["main/components/treemap.cljs"],"mappings":"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","names":["main.components.treemap/margin","main.components.treemap/width","main.components.treemap/height","main.components.treemap/loading","cljs.core/deref","cljs.core/not","main.state/load","main.components.treemap/content","main.components.treemap/treemap","main.components.section/section","main.components.treemap/fetch-link!","ajax.core.GET.cljs$core$IFn$_invoke$arity$variadic","data","p1__27655#","svg","js/d3","cljs.core/clj->js","root","js/JSON","p1__27642#","tooltip","mouseover","mousemove","e","this","evts","p1__27644#","p2__27645#","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","clojure.string/replace","cljs.core/first","cljs.core/second","fexpr__27678","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","x1","js/d3.mouse","y1","bounds","js/document","x2","fexpr__27682","p1__27653#","y2","fexpr__27685","p1__27654#","mouseleave","grepo","fader","fexpr__27693","color","cljs.core.reduce.cljs$core$IFn$_invoke$arity$2","cljs.core/max","p1__27656#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","js/d3.interpolateRgb","js/d3.rgb","cljs.core/reset!","main.state/data","fexpr__27696","p1__27657#","p1__27658#","p1__27659#","p1__27660#","js/window.open","p1__27661#","G__27698","p1__27662#","p1__27663#","p1__27664#","p1__27665#","p__27699","map__27700","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","status","status-text","js/setTimeout","js/console.log","main.components.treemap/append-svg","e27704","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns main.components.treemap\n  (:require [main.state :as state]\n            [cljsjs.d3]\n            [main.components.section :refer [section]]\n            [ajax.core :refer [GET]]\n            [clojure.string :as str]))\n\n(def margin {:top 10 :right 10 :bottom 10 :left 10})\n(def width (- 450 (:left margin) (:right margin)))\n(def height (- 450 (:top margin) (:bottom margin)))\n\n(defn loading\n  []\n  [:div {:id \"gitload\" :class (when (not @state/load) \"invisibile\")}\n   [:div.loader]\n   [:p.text-center.loadtxt \"Loading...\"]])\n\n(defn content\n  []\n  [:div\n   (loading)\n   [:div {:id \"treemap\"}]])\n\n(defn treemap\n  []\n  (section\n   \"treemap-section\"\n   \"Recent Activities\"\n   (content)))\n\n(defn fetch-link! []\n  (GET \"https://sleepy-chamber-33613.herokuapp.com/streemap?name=Ventrosky\";\"https://observant-mouth.glitch.me/streemap?name=Ventrosky\"\n    {:handler (fn [data]\n                (let [svg (-> js/d3\n                              (.select \"#treemap\")\n                              (.append \"svg\")\n                              (.attr \"class\" \"center-block\")\n                              (.attr \"viewBox\" (clj->js [0 0 width height]))\n                              (.attr \"id\" \"svg-treemap\")\n                              (.append \"g\")\n                              (.attr \"transform\" (str \"translate(0,0)\")))\n                      root (-> js/d3\n                               (.hierarchy (.parse js/JSON data))\n                               (.sum #(.-value %)))\n                      tooltip (-> js/d3\n                                  (.select \"#treemap\")\n                                  (.append \"div\")\n                                  (.style \"opacity\" 0)\n                                  (.attr \"class\" \"tooltip\"))\n                      mouseover #(-> tooltip\n                                     (.style \"opacity\" 1))\n                      mousemove (fn [e] \n                                  (this-as this\n                                           (let [evts (reduce\n                                                       #(str %1 \"<br>\" (str/replace (first %2) #\"Event$\" \"\") \": \" (second %2))\n                                                       \"\"\n                                                       ((js->clj (.-data e)) \"evts\"))\n                                                 x1 (first (js/d3.mouse this))\n                                                 y1 (second (js/d3.mouse this))\n                                                 bounds (-> js/document\n                                                            (.getElementById \"treemap\")\n                                                            (.getBoundingClientRect))\n                                                 x2 (#(* (/ % width) (.-width bounds)) x1)\n                                                 y2 (#(* (/ % height) (.-height bounds)) y1)]\n                                             (do\n                                               (-> js/d3\n                                                   (.select this)\n                                                   (.style \"stroke\" \"#006800\"))\n                                               (-> tooltip\n                                                   (.html (str \"<span id=\" \"repo\" \">\" (.-name (.-data e)) \"</span>\" evts))\n                                                   (.style \"left\" (str (if (> x1 (/ width 2))\n                                                                         (- x2 190)\n                                                                         (+ x2 60)) \"px\"))\n                                                   (.style \"top\" (str (- y2 80) \"px\")))))))\n                      mouseleave #(this-as this\n                                           (do \n                                             (-> tooltip\n                                                 (.style \"opacity\" 0))\n                                             (-> js/d3\n                                                 (.select this)\n                                                 (.style \"stroke\" \"#989898\"))))\n                      grepo (-> svg\n                                (.selectAll \"g\")\n                                (.data (.leaves root))\n                                (.enter)\n                                (.append \"g\"))\n                      fader #((-> js/d3\n                                  (.interpolateRgb % \"#fff\"))\n                              0.2)\n                      color (-> js/d3\n                                (.scaleSequential)\n                                (.domain (clj->js [1 (reduce max\n                                                             (map #(.-value %)\n                                                                  (.leaves root)))]))\n                                (.interpolator (js/d3.interpolateRgb\n                                                (js/d3.rgb \"#8DB255\")\n                                                (js/d3.rgb \"#006442\"))))]\n                  (do\n                    (reset! state/data data)\n                    (reset! state/load false)\n                    ((-> js/d3\n                         (.treemap)\n                         (.size (clj->js [width height]))\n                         (.padding 2)) root)\n                    (-> grepo\n                        (.append \"rect\")\n                        (.attr \"x\" #(.-x0 %))\n                        (.attr \"y\" #(.-y0 %))\n                        (.attr \"width\" #(- (.-x1 %) (.-x0 %)))\n                        (.attr \"height\" #(- (.-y1 %) (.-y0 %)))\n                        (.attr \"stroke\" \"#989898\")\n                        (.attr \"cursor\" \"pointer\")\n                        (.on \"click\" (fn [e]\n                                       (js/window.open\n                                        (.-url (.-data e))\n                                        \"_blank\")))\n                        (.on \"mouseover\" mouseover)\n                        (.on \"mousemove\" mousemove)\n                        (.on \"mouseleave\" mouseleave)\n                        (.attr \"fill\" #(color (.-value %))))\n                    (-> grepo\n                        (.append \"text\")\n                        (.attr \"x\" #(+ (.-x0 %) 2))\n                        (.attr \"y\" #(+ (.-y0 %) 12))\n                        (.text #(str/replace (.-name (.-data %)) #\"^[^/]+/\" \"\"))\n                        (.attr \"font-size\" \"0.48em\")\n                        (.attr \"width\" #(- (.-x1 %) (.-x0 %)))\n                        (.attr \"fill\" \"white\")\n                        (.attr \"class\" \"truncate\")))\n                  true))\n     :error-handler (fn [{:keys [status status-text]}]\n                      (do\n                        (js/setTimeout #(fetch-link!) 5000)\n                        (js/console.log \"Error while fetching GitHub Activity! Retrying in 5 seconds...\")))}))\n\n(defn append-svg []\n  (let []\n    (try\n      (fetch-link!)\n      (catch :default e\n        (println e)\n        false))))"]}